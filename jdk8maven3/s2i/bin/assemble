#!/bin/bash -e
if [[ "$1" == "-h" ]]; then
        # If the 'maven-3-jdk-8-builder' assemble script is executed with '-h' flag,
        # print the usage.
        exec /usr/libexec/s2i/usage
fi
if [ -z $FILTER_APPLICATION_JAR_NAME ]; then
   echo "Aborting ... you must set environment variable FILTER_APPLICATION_JAR_NAME (es. *.jar) to deploy a java application"
   exit -1
fi
# Restore artifacts from the previous build (if they exist).
#
if [ "$(ls /tmp/artifacts/ 2>/dev/null)" ]; then
  echo "---> Restoring build artifacts..."
  mv /tmp/artifacts/. ./
fi

LOCAL_SOURCE_DIR=/opt/app/src
mkdir -p $LOCAL_SOURCE_DIR

DEPLOY_DIR=/opt/app/bin
mkdir -p $DEPLOY_DIR

cp -Rf /tmp/src/. $LOCAL_SOURCE_DIR
#chgrp -R 0 $LOCAL_SOURCE_DIR
#chmod -R g+rw $LOCAL_SOURCE_DIR

  if [ -z "$MAVEN_ARGS" ]; then
    export MAVEN_ARGS="package -Popenshift -DskipTests"
  fi
  if [ -z "$MAVEN_ARGS_APPEND" ]; then
    export MAVEN_ARGS="$MAVEN_ARGS $MAVEN_ARGS_APPEND"
  fi
  echo "Found pom.xml... attempting to build with 'mvn ${MAVEN_ARGS}'"


cd $LOCAL_SOURCE_DIR
echo "sono posizionato in " `pwd`
mvn --version

mvn $MAVEN_ARGS
ERR=$?
if [ $ERR ne 0 ]; then
  echo "Aborting ..."
  exit $ERR
fi

#cp -f $LOCAL_SOURCE_DIR/target/*.jar $DEPLOY_DIR
echo "find ${LOCAL_SOURCE_DIR} -name ${FILTER_APPLICATION_JAR_NAME}"
echo found: `find ${LOCAL_SOURCE_DIR} -name "${FILTER_APPLICATION_JAR_NAME}"`
cp -f `find $LOCAL_SOURCE_DIR -name "${FILTER_APPLICATION_JAR_NAME}"` $DEPLOY_DIR
#  chgrp -R 0 $DEPLOY_DIR
#  chmod -R g+rw $DEPLOY_DIR

